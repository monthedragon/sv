<?php Class Remarks extends Auth_Controller  { 	var $data = array();	//use `Auth_Controller` if you want the page to be validated if the user is logged in or not, if you want to disable this then use `CI_Controller` instead	public  function __construct(){		parent::__construct();		$this->load->model('remarks_model');		$this->load->model('sales_model');		$this->load->model('users_model');		$this->load->helper('url');		$this->load->library('session');  		$this->load->helper(array('form', 'url'));  		$this->data = $this->get_privs();        $this->load->library('MY_utils');	} 		function get_remarks_part($sale_id,$calldate=''){        $saleDetails = $this->sales_model->get_sale_main_details($sale_id);        $data['customer'] = $saleDetails['firstname'] .' ' .$saleDetails['lastname'];        $crmDetails = $this->my_utils->get_crm_by_code($saleDetails['crm_code']);        $calldate = ((!empty($calldate)) ? $calldate : date('Y-m-d'));        $data['return_url'] = base_url('sales/list_sale/'.$crmDetails['id'].'/'.$calldate);		$data['sale_id'] = $sale_id;		$data['remarks'] = $this->remarks_model->get_remarks($sale_id);		$data['users'] = $this->users_model->get_all_users();				$arrOfLuCode = array('sv_status','ol_alert','ol_status','actions');        $data['lu'] = $this->getLookupBatch($arrOfLuCode);				return $data;	}		public function view_remarks($sale_id,$calldate=''){        $data = $this->get_remarks_part($sale_id,$calldate);        $data['editable'] =true; //if the view_remarks called from HTML then editing or adding remark is allowed        $this->set_header_data(PROJECT_NAME,'Remarks: '. strtoupper($data['customer']));		$this->view_remarks_ajax($sale_id,$data);		$this->load->view('templates/footer');	}		public function view_remarks_ajax($sale_id,$data=array()){		$initData = $this->get_remarks_part($sale_id);		$data += $initData;				$saleDetails = $this->sales_model->get_sale_main_details($sale_id);		$data['saleDetails'] = $saleDetails;				$this->load->view('remarks/remarks',$data);	}		public function create_response($sale_id){		$data = $this->get_remarks_part($sale_id);		$data['sale_id'] = $sale_id;		$this->load->view('remarks/create_remarks',$data);	}		public function save_remarks($sale_id){		$pdata = $this->input->post();		$saleDetails = $this->sales_model->get_sale_main_details($sale_id);		//action should be 1 or moved sale		$movedDate = (($pdata['action'] == 1) ? $pdata['moved_date'] : '');				$insertArr = array(            'crm_code'=>$saleDetails['crm_code'],            'table_recid'=>$saleDetails['table_recid'],            'remarks'=>$pdata['remarks'],            'alert'=>$pdata['alert'],			'action'=>$pdata['action'],			'moved_date'=>$movedDate,			'status'=>0, //set 0 since there is no need to have status            'user_id'=>$this->session->userdata['username'],			'mask_name'=>$this->session->userdata['mask_name']        );        $this->db->insert('remarks',$insertArr);				//update sales		$setArr = array(						'alert'=>(($pdata['alert']==0) ? 0 : $pdata['alert']),						'moved_date'=>$movedDate						);		$whereArr = array('id'=>$sale_id);		$this->db->update('sales',$setArr,$whereArr);				//update sales from main table		//move date even not sale their own risk!!!		$crmDetails = $this->my_utils->get_crm_by_code($saleDetails['crm_code']);        $newconn = $this->my_utils->change_conn($crmDetails);		$newconn->update($crmDetails['main_table'],						array($crmDetails['calldate_field']=>$movedDate),						array('id'=>$saleDetails['table_recid'])						);			}	}?>